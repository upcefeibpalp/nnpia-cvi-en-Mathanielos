ChatGPT
-- Prvně Vysvětlen projekt umělé inteligenci --

-- Prompt --
Jakou z UI knihoven na tento projekt by si doporučil ? " Material-UI, Chakra UI, Tailwind CSS či něco jiného"
-- ChatGPT doporučil Chakra UI, jenomže po otestování tam sám dělal spoustu chyb, jelikož si pletl různé verze a i po specifikování verze měl problémy, tak jsem otestoval Material-UI a nakonec skončil u toho --

-- Prompt --
Pokračuj prosím tímto zadáním do našeho projektu: 
"- Na hlavní stránce `App.tsx` vytvořte tabulku pro zobrazení seznamu uživatelů s využitím Vámi zvoleného UI .
  - Tabulka bude obsahovat sloupce pro zobrazení všech atributů uživatele.
  - Každý řádek bude obsahovat tlačítko pro změnu stavu `active` uživatele.
  - Tabulku nastylujte pomocí Vámi vybrané knihovny pro grafické zpracování. ![AI](https://img.shields.io/badge/AI-yellow)
  - Pomocí AI vygenerujte pole uživatelů a zobrazte je v tabulce. ![AI](https://img.shields.io/badge/AI-yellow)
  - Ověřte funkčnost tlačítka pro změnu stavu `active` uživatele.
- Poté tabulku refaktorujte tak, aby byla vytvořena jako samostatná komponenta `UserTable.tsx` a tu vložte do `App.tsx`."

-- Prompt --
- K čemu slouží parametr `key` u komponent a kdy je výhodné jej použít?
	- key je speciální atribut, který React používá pro identifikaci prvků v seznamu.
	- Pomáhá Reactu efektivně porovnat a aktualizovat DOM pomocí tzv. reconciliation algoritmu.
	- Pokud key není specifický a stabilní (např. místo unikátního ID použiješ index v poli), může docházet k chybám (např. špatné přemapování dat na komponenty při změně 	pořadí).
	- users.map(user => <UserCard key={user.id} {...user} />)
- Jaký je rozdíl mezi "Re-Evaluate" a "Re-Render" DOM struktury a kdy k němu při použítí Reactu dochází?
	- Re-Evaluate (znovu vyhodnocení): React znovu spustí funkci komponenty, aby zjistil, jaký má vracet JSX na základě nových props nebo state.
	- Re-Render (znovu vykreslení): Fyzicky dochází k aktualizaci DOMu (nebo jeho části).

	Zjednodušeně:
	"Re-evaluate" je přepočet virtuálního DOMu, "re-render" je případná změna reálného DOMu.
- Proč se dříve do každé komponenty musel vkládat `import react from React`?
	- Do verze React 17 JSX vyžadoval `React` v dosahu, protože JSX se překládal na `React.createElement(...)`.
	- Od Reactu 17 výš už to není potřeba díky "new JSX transform" v překladači jako Babel.

- K čemu slouží soubor `eslint.config.js` a jaké příkazy lze použít?
	- `eslint.config.js` slouží k konfiguraci pravidel statické analýzy kódu (lintování).
	- Definuje pravidla, pluginy, prostředí, parser a jeho možnosti.
Ukázkový obsah:
export default [
  {
    files: ['**/*.js'],
    languageOptions: {
      ecmaVersion: 2022,
      sourceType: 'module',
    },
    rules: {
      semi: ['error', 'always'],
      quotes: ['warn', 'single'],
    },
  },
];

Příkazy:
"scripts": {
  "lint": "eslint . --ext .js,.jsx",
  "lint:fix": "eslint . --ext .js,.jsx --fix"
}
