ChatGPT
-- Využito stejného chatu jako na ostatní zadání, aby si AI pamatovalo celý projekt a zároveň při každém promptu přidány komponenty kde se má stát úprava, aby AI používalo nejnovější verzi komponent --

-- Prompt --
Do našeho projektu vytvoř přihlašovací formulář, toto je celé zadání:
"- Vytvořte novou komponentu `UserLoginForm.tsx`.
  - Komponentu realizujte jako samostatnou stránku a zahrňte jí do routování.
  - Na hlavní stránku nebo do menu aplikace vložte tlačítko pro přihlášení.
    - Tlačítko realizujte jako samostatnou komponentu.
    - Po stisknutí bude uživatel přesměrován na přihlašovací stránku.
- V komponentě implementujte nový formulář pro přihlášení uživatele.
  - Pole formuláře by měly reflektovat atributy `email` a `password` entity `User`.
    - V rámci toho cvičení není nutné přidávat validaci hodnot.
  - Přidejte tlačítko pro odeslání formuláře.
    - Po odeslání formuláře zobrazte obdržený JWT token v konzoli."

-- Dobrovolné --
-- Prompt --
Implementuj toto do projektu: 
" - Po úspěšném přihlášení přesměrujte uživatele na hlavní stránku aplikace.
  - Využijte k tomu knihovnu pro routování, kterou jste použili v předchozím cvičení."

-- Prompt --
Implementuj tuto část:
"- Zamezte uživateli přístup na stránku s přihlašovacím formulářem pokud je již přihlášen.
  - Využijte k tomu knihovnu pro routování, kterou jste použili v předchozím cvičení."

-- Prompt --
Udělej tuto část s tím, že používáme Vite:
"- Při volání backendu je nutné do kódu zahrnout URL adresu API.
  - Není úplně vhodné tuto hodnotu deklarovat přímo v textovém řetězci.
  - Vytvořte soubor `.env` ve složce `frontend` a deklarujte globální proměnnou, která bude obsahovat URL adresu backendu.
    - Pokud **nepoužíváte Vite**, bude nutné doinstalovat [dotenv](https://www.npmjs.com/package/dotenv) knihovnu.
  - V kódu nahraďte hardcode hodnotu URL backendu proměnnou z `.env` souboru.
    - Pokud **používáte Vite**, bude pořeba si dát na pár věcí [pozor](https://vite.dev/guide/env-and-mode)."
